# Generated by Django 5.0.7 on 2025-09-19 04:53

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('owners', '0001_initial'),
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('phone', models.CharField(max_length=12, unique=True, verbose_name='Contact Phone')),
                ('phone2', models.CharField(max_length=12, unique=True, verbose_name='Contact Phone')),
                ('id_proof', models.ImageField(upload_to='id_proof/', verbose_name='Id Proof')),
                ('is_approved', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
            bases=('users.customuser',),
        ),
        migrations.CreateModel(
            name='TempOwnerAndVenueDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner_details', models.JSONField(blank=True, null=True)),
                ('venue_details', models.JSONField(blank=True, null=True)),
                ('event_details', models.JSONField(blank=True, null=True)),
                ('facility_details', models.JSONField(blank=True, null=True)),
                ('secure_token', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.AddField(
            model_name='onetimepasswordforowner',
            name='owner',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='owners.owner'),
        ),
        migrations.CreateModel(
            name='TimeSlots',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_slots', models.JSONField(blank=True, default=list, null=True)),
                ('booking_package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='owners.bookingpackages')),
            ],
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('convention_center_name', models.CharField(max_length=150, unique=True, verbose_name='Venue Name')),
                ('short_description', models.CharField(max_length=225, verbose_name='Short Description')),
                ('description', models.TextField(verbose_name='Venue Description')),
                ('dining_seat_count', models.PositiveIntegerField(verbose_name='Dining Seat Count')),
                ('auditorium_seat_count', models.PositiveIntegerField(verbose_name='Auditorium Seat Count')),
                ('condition', models.CharField(max_length=6)),
                ('extra_ac_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price', models.IntegerField(verbose_name='Price')),
                ('state', models.CharField(max_length=150, verbose_name='State')),
                ('district', models.CharField(max_length=150, verbose_name='District')),
                ('city', models.CharField(max_length=150, verbose_name='City')),
                ('pincode', models.CharField(max_length=10, verbose_name='Pincode')),
                ('address', models.TextField(verbose_name='Address')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Latitude')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Longitude')),
                ('terms_and_conditions', models.FileField(blank=True, null=True, upload_to='terms_conditions/', verbose_name='Terms and Conditions PDF')),
                ('venue_license', models.ImageField(upload_to='venue_license/', verbose_name='Venue License')),
                ('is_verified', models.BooleanField(default=False)),
                ('is_rejected', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_under_maintenance', models.BooleanField(default=False)),
                ('maintenance_start_date', models.DateField(blank=True, null=True)),
                ('maintenance_end_date', models.DateField(blank=True, null=True)),
                ('maintenance_reason', models.TextField(blank=True, null=True)),
                ('blocking_reason', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='owners.owner')),
            ],
        ),
        migrations.AddField(
            model_name='facility',
            name='venue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facilities', to='owners.venue'),
        ),
        migrations.AddField(
            model_name='event',
            name='venue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='owners.venue'),
        ),
        migrations.AddField(
            model_name='bookingpackages',
            name='venue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='owners.venue'),
        ),
        migrations.CreateModel(
            name='VenueImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('venue_photo', models.ImageField(upload_to='venue_images/', verbose_name='Venue Photo')),
                ('is_active', models.BooleanField(default=True)),
                ('venue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='owners.venue')),
            ],
        ),
    ]
